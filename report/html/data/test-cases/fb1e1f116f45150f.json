{
  "uid" : "fb1e1f116f45150f",
  "name" : "test_api[case_data16]",
  "fullName" : "case.test_allocation.TestCase#test_api",
  "historyId" : "3cb768ad8c0c9f46c07211f54c489bbe",
  "time" : {
    "start" : 1589449081489,
    "stop" : 1589449087963,
    "duration" : 6474
  },
  "description" : "\n        :param case_data: 测试用例\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    :param case_data: 测试用例\n    :return:\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "self = <case.test_allocation.TestCase object at 0x10f974710>\ncase_data = {'APIName': '其他入库签字', 'CaseId': 17, 'CaseName': 'sign_transfer-in-bills', 'CheckType': 'only_check_status', ...}\n\n    @pytest.mark.parametrize('case_data', case_dict, ids=[])\n    @allure.story(\"调拨模块测试\")\n    # @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_api(self, case_data):\n        '''\n        :param case_data: 测试用例\n        :return:\n        '''\n        code, response = h.send_requests(case_data)\n        result = checkResult.check_result(case_data, code, response)\n>       assert result\nE       assert False\n\ntest_allocation.py:56: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1589448929230,
      "stop" : 1589448932279,
      "duration" : 3049
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n        :param case_data: 测试用例\n        :return:\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "self = <case.test_allocation.TestCase object at 0x10f974710>\ncase_data = {'APIName': '其他入库签字', 'CaseId': 17, 'CaseName': 'sign_transfer-in-bills', 'CheckType': 'only_check_status', ...}\n\n    @pytest.mark.parametrize('case_data', case_dict, ids=[])\n    @allure.story(\"调拨模块测试\")\n    # @pytest.mark.flaky(reruns=3, reruns_delay=3)\n    def test_api(self, case_data):\n        '''\n        :param case_data: 测试用例\n        :return:\n        '''\n        code, response = h.send_requests(case_data)\n        result = checkResult.check_result(case_data, code, response)\n>       assert result\nE       assert False\n\ntest_allocation.py:56: AssertionError",
    "steps" : [ {
      "name" : "开始请求接口",
      "time" : {
        "start" : 1589449081538,
        "stop" : 1589449081539,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "7a9a9d0cf128eb5c",
        "name" : "请求类型",
        "source" : "7a9a9d0cf128eb5c.attach",
        "type" : "text/plain",
        "size" : 4
      }, {
        "uid" : "9b515d7a0c7532bc",
        "name" : "用例名称:",
        "source" : "9b515d7a0c7532bc.attach",
        "type" : "text/plain",
        "size" : 24
      }, {
        "uid" : "22d42e4fe001fbd9",
        "name" : "请求地址:",
        "source" : "22d42e4fe001fbd9.attach",
        "type" : "text/plain",
        "size" : 54
      }, {
        "uid" : "98ba0f0746eed6c0",
        "name" : "请求头",
        "source" : "98ba0f0746eed6c0.attach",
        "type" : "text/plain",
        "size" : 56
      }, {
        "uid" : "a7520aae7e39bfed",
        "name" : "请求参数类型",
        "source" : "a7520aae7e39bfed.attach",
        "type" : "text/plain",
        "size" : 4
      }, {
        "uid" : "d95d02f3c21e23a6",
        "name" : "请求参数",
        "source" : "d95d02f3c21e23a6.attach",
        "type" : "text/plain",
        "size" : 6312
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "开始请求接口",
      "time" : {
        "start" : 1589449087924,
        "stop" : 1589449087926,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5a1d479cc31e1fac",
        "name" : "请求类型",
        "source" : "5a1d479cc31e1fac.attach",
        "type" : "text/plain",
        "size" : 4
      }, {
        "uid" : "8276bacf5df13750",
        "name" : "用例名称:",
        "source" : "8276bacf5df13750.attach",
        "type" : "text/plain",
        "size" : 22
      }, {
        "uid" : "4391f2483699d508",
        "name" : "请求地址:",
        "source" : "4391f2483699d508.attach",
        "type" : "text/plain",
        "size" : 65
      }, {
        "uid" : "15207dc75f90fe7b",
        "name" : "请求头",
        "source" : "15207dc75f90fe7b.attach",
        "type" : "text/plain",
        "size" : 73
      }, {
        "uid" : "83124dd29b36600c",
        "name" : "请求参数类型",
        "source" : "83124dd29b36600c.attach",
        "type" : "text/plain",
        "size" : 9
      }, {
        "uid" : "77f6734dd184a226",
        "name" : "请求参数",
        "source" : "77f6734dd184a226.attach",
        "type" : "text/plain",
        "size" : 71
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "接口仅校验HTTP状态码",
      "time" : {
        "start" : 1589449087961,
        "stop" : 1589449087962,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a8a3a21842aaf5b8",
        "name" : "预期code是",
        "source" : "a8a3a21842aaf5b8.attach",
        "type" : "text/plain",
        "size" : 3
      }, {
        "uid" : "76d31ec0fe1d611",
        "name" : "实际code是",
        "source" : "76d31ec0fe1d611.attach",
        "type" : "text/plain",
        "size" : 3
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3252eb16c41d9518",
      "name" : "log",
      "source" : "3252eb16c41d9518.txt",
      "type" : "text/plain",
      "size" : 8244
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 15,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1589449091989,
      "stop" : 1589449092591,
      "duration" : 602
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "调拨模块测试"
  }, {
    "name" : "feature",
    "value" : "渠道云接口自动化测试"
  }, {
    "name" : "parentSuite",
    "value" : "case"
  }, {
    "name" : "suite",
    "value" : "test_allocation"
  }, {
    "name" : "subSuite",
    "value" : "TestCase"
  }, {
    "name" : "host",
    "value" : "xmlydeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "53416-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.test_allocation"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_data",
    "value" : "{'CaseId': 17, 'CaseName': 'sign_transfer-in-bills', 'APIName': '其他入库签字', 'Headers': {'Content-Type': 'application/x-www-form-urlencoded', 'charset': 'UTF-8'}, 'Path': '/occ-stock/stock/transfer-in-bills/batch-sign', 'Method': 'post', 'ParameterType': 'form_data', 'Params': {'ids': 'create-transfer-in1', 'search_AUTH_APPCODE': 'transferInBill'}, 'CheckType': 'only_check_status', 'ExpectedCode': 200, 'ExpectedData': '', 'User': 'Manager', 'DependCase': 'create_transfer-in-bills', 'RelevanceList': {'ids': '$..id'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "fb1e1f116f45150f.json",
  "parameterValues" : [ "{'CaseId': 17, 'CaseName': 'sign_transfer-in-bills', 'APIName': '其他入库签字', 'Headers': {'Content-Type': 'application/x-www-form-urlencoded', 'charset': 'UTF-8'}, 'Path': '/occ-stock/stock/transfer-in-bills/batch-sign', 'Method': 'post', 'ParameterType': 'form_data', 'Params': {'ids': 'create-transfer-in1', 'search_AUTH_APPCODE': 'transferInBill'}, 'CheckType': 'only_check_status', 'ExpectedCode': 200, 'ExpectedData': '', 'User': 'Manager', 'DependCase': 'create_transfer-in-bills', 'RelevanceList': {'ids': '$..id'}}" ]
}